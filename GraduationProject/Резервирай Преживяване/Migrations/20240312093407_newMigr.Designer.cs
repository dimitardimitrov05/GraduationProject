// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Резервирай_Преживяване.Data;

#nullable disable

namespace Резервирай_Преживяване.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240312093407_newMigr")]
    partial class newMigr
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Резервирай_Преживяване.Data.Account.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Резервирай_Преживяване.Data.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("44b9e06e-e3e6-46db-93e5-afe18afe1213"),
                            Name = "Бургас",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = new Guid("43320305-fd87-416f-af2f-0877e53c6382"),
                            Name = "Варна",
                            Region = "Варна"
                        },
                        new
                        {
                            Id = new Guid("14310b9e-7430-4cff-a15c-72f06595992c"),
                            Name = "Силистра",
                            Region = "Силистра"
                        },
                        new
                        {
                            Id = new Guid("326211c7-1f7b-485a-ba88-8e376f5330e0"),
                            Name = "Търговище",
                            Region = "Търговище"
                        },
                        new
                        {
                            Id = new Guid("85c602c4-cfc8-43ae-8fdc-a0fc837eb3ce"),
                            Name = "Ловеч",
                            Region = "Ловеч"
                        },
                        new
                        {
                            Id = new Guid("59b474c1-16e9-4e39-9c57-75a7633127a6"),
                            Name = "Кърджали",
                            Region = "Кърджали"
                        },
                        new
                        {
                            Id = new Guid("8ba23070-6733-40a8-b57d-e503f1d171a2"),
                            Name = "Пловдив",
                            Region = "Пловдив"
                        },
                        new
                        {
                            Id = new Guid("b7dc6946-a8e5-4093-800e-b0f6ee8b5ba3"),
                            Name = "Добрич",
                            Region = "Добрич"
                        },
                        new
                        {
                            Id = new Guid("5416b2f3-a698-44d5-a550-d712c08c2749"),
                            Name = "София",
                            Region = "София"
                        },
                        new
                        {
                            Id = new Guid("044f8d23-5412-48ee-9fe6-668c324ae009"),
                            Name = "Благоевград",
                            Region = "Благоевград"
                        },
                        new
                        {
                            Id = new Guid("c5cce326-6b9e-42e3-8e30-a7c49f4a9f3d"),
                            Name = "Пазарджик",
                            Region = "Пазарджик"
                        },
                        new
                        {
                            Id = new Guid("c176e00d-b28d-47d8-958a-c9fbf6ff3810"),
                            Name = "Перник",
                            Region = "Перник"
                        },
                        new
                        {
                            Id = new Guid("8bca9a4a-0d4c-4bca-97c5-eba270260c3e"),
                            Name = "Плевен",
                            Region = "Плевен"
                        },
                        new
                        {
                            Id = new Guid("797a1392-bad9-4438-84ad-00e62a2038a1"),
                            Name = "Видин",
                            Region = "Видин"
                        },
                        new
                        {
                            Id = new Guid("aecd9893-6691-405f-9109-7cdb9cea5791"),
                            Name = "Монтана",
                            Region = "Монтана"
                        },
                        new
                        {
                            Id = new Guid("2d7a97e5-a08e-4ea5-9630-e1c42976bd51"),
                            Name = "Кюстендил",
                            Region = "2500"
                        },
                        new
                        {
                            Id = new Guid("49af785e-2bdb-470e-a04a-c7509ea11990"),
                            Name = "Ямбол",
                            Region = "Ямбол"
                        },
                        new
                        {
                            Id = new Guid("08413d50-d3e3-45c7-aa06-d1359e6f304e"),
                            Name = "Русе",
                            Region = "Русе"
                        },
                        new
                        {
                            Id = new Guid("3d7476bb-b3da-4413-b76d-fa85ebad46ea"),
                            Name = "Враца",
                            Region = "Враца"
                        },
                        new
                        {
                            Id = new Guid("0d34715f-adda-40b8-91f5-6e23c7af51a8"),
                            Name = "Велико Търново",
                            Region = "Велико Търново"
                        },
                        new
                        {
                            Id = new Guid("5fc35891-eed5-4509-8365-0ce420bca8d4"),
                            Name = "Шумен",
                            Region = "Шумен"
                        },
                        new
                        {
                            Id = new Guid("f024a1f5-103d-43bb-8c46-324ede24acd2"),
                            Name = "Габрово",
                            Region = "Габрово"
                        },
                        new
                        {
                            Id = new Guid("5ada3746-891b-4134-b935-5e5d88cb7c11"),
                            Name = "Разград",
                            Region = "Разград"
                        },
                        new
                        {
                            Id = new Guid("9fde9dd5-0b16-4a15-b1a4-0b2f9c6274a7"),
                            Name = "Сливен",
                            Region = "Сливен"
                        },
                        new
                        {
                            Id = new Guid("4d73d550-90f6-4418-bca5-565be40a1999"),
                            Name = "Смолян",
                            Region = "Смолян"
                        },
                        new
                        {
                            Id = new Guid("9405b409-3790-411e-8988-029e13068487"),
                            Name = "Стара Загора",
                            Region = "Стара Загора"
                        },
                        new
                        {
                            Id = new Guid("b5415f34-4435-4c98-a1e5-33067cb9cdd1"),
                            Name = "Хасково",
                            Region = "Хасково"
                        },
                        new
                        {
                            Id = new Guid("e1e04c10-4955-43a5-a4b3-7af5730695c6"),
                            Name = "Банско",
                            Region = "Благоевград"
                        },
                        new
                        {
                            Id = new Guid("c122482c-7443-42d6-ad68-247a898a5a45"),
                            Name = "Мелник",
                            Region = "Благоевград"
                        },
                        new
                        {
                            Id = new Guid("b1c5544f-96a0-4d53-8e04-5bba47e857a0"),
                            Name = "Сандански",
                            Region = "Благоевград"
                        },
                        new
                        {
                            Id = new Guid("2fcb9fae-5f5c-4536-b182-abfd609158e2"),
                            Name = "Симитли",
                            Region = "Благоевград"
                        },
                        new
                        {
                            Id = new Guid("3c80c35f-610e-49f4-a473-4b00091b56a6"),
                            Name = "Айтос",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = new Guid("eabd8070-c77a-4f9c-95ac-01c963f60357"),
                            Name = "Ахелой",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = new Guid("0efcd63f-9c19-4c59-9f4a-aa7f176074cd"),
                            Name = "Балчик",
                            Region = "Добрич"
                        },
                        new
                        {
                            Id = new Guid("a1900cc4-cf37-4bc1-8a30-0ed2c2a26731"),
                            Name = "Банкя",
                            Region = "София"
                        },
                        new
                        {
                            Id = new Guid("aeb6d0bc-a0fd-4ae1-9643-27c4a7060953"),
                            Name = "Баня",
                            Region = "Пловдив"
                        },
                        new
                        {
                            Id = new Guid("fdc105d3-64c6-45ce-b745-101c4a2dde83"),
                            Name = "Белоградчик",
                            Region = "Видин"
                        },
                        new
                        {
                            Id = new Guid("24bd9ff0-a4d8-481e-94a9-b481d1c1fbe5"),
                            Name = "Бяла",
                            Region = "Варна"
                        },
                        new
                        {
                            Id = new Guid("a80a0edc-3a48-430d-bb90-f11565535d16"),
                            Name = "Велинград",
                            Region = "Пазарджик"
                        },
                        new
                        {
                            Id = new Guid("72ac0665-548e-411c-a4a3-2c821a88dd6c"),
                            Name = "Доспат",
                            Region = "Смолян"
                        },
                        new
                        {
                            Id = new Guid("ca52c322-63e7-4bf2-b306-991fbf9e65fa"),
                            Name = "Дряново",
                            Region = "Габрово"
                        },
                        new
                        {
                            Id = new Guid("e4e13cf5-40af-4e0d-8b5c-735d5ed94f89"),
                            Name = "Елхово",
                            Region = "Ямбол"
                        },
                        new
                        {
                            Id = new Guid("20a8a494-03ae-40c0-9474-c6bff742ff1e"),
                            Name = "Казанлък",
                            Region = "Стара Загора"
                        },
                        new
                        {
                            Id = new Guid("f6e67d80-1420-4561-ab8c-003f9376c3db"),
                            Name = "Калофер",
                            Region = "Пловдив"
                        },
                        new
                        {
                            Id = new Guid("fa81b7a1-ea1c-49a5-bf71-07fe9d663ad8"),
                            Name = "Карлово",
                            Region = "Пловдив"
                        },
                        new
                        {
                            Id = new Guid("b6681af7-adcf-4970-b8ea-040fb7420775"),
                            Name = "Китен",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = new Guid("cc8ce62a-b823-4350-99b8-f6f7ae24e09b"),
                            Name = "Клисура",
                            Region = "Пловдив"
                        },
                        new
                        {
                            Id = new Guid("d585afd7-02df-4541-ac6d-98494ffe2832"),
                            Name = "Копривщица",
                            Region = "София"
                        },
                        new
                        {
                            Id = new Guid("0c54d9b6-96a3-404c-a8a0-9287147e1fe1"),
                            Name = "Лом",
                            Region = "Монтана"
                        },
                        new
                        {
                            Id = new Guid("30cd2ee4-310f-4a25-986b-6f7d465c2a39"),
                            Name = "Несебър",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = new Guid("88e9bb91-0881-4166-9c7f-9f519941375b"),
                            Name = "Нова Загора",
                            Region = "Сливен"
                        },
                        new
                        {
                            Id = new Guid("9e17acee-abc1-41b6-a80f-93e982607675"),
                            Name = "Обзор",
                            Region = "Варна"
                        },
                        new
                        {
                            Id = new Guid("bc54993f-9aa4-4c30-8aab-e121c403704f"),
                            Name = "Павел Баня",
                            Region = "Стара Загора"
                        },
                        new
                        {
                            Id = new Guid("167d8ef2-8de9-42e1-af96-59fc782c1d35"),
                            Name = "Панагюрище",
                            Region = "Пазарджик"
                        },
                        new
                        {
                            Id = new Guid("fdec6cb0-0d98-4822-8bde-e1c6d1a18d6b"),
                            Name = "Петрич",
                            Region = "Благоевград"
                        },
                        new
                        {
                            Id = new Guid("7305a68d-615a-467d-a919-55ba6070d762"),
                            Name = "Плиска",
                            Region = "Шумен"
                        },
                        new
                        {
                            Id = new Guid("b9537eac-193f-4ca6-b3a8-fe80e90a5679"),
                            Name = "Самоков",
                            Region = "София"
                        },
                        new
                        {
                            Id = new Guid("d5f6a059-6b12-482e-a38e-d8a507602a7a"),
                            Name = "Сапарева баня",
                            Region = "Кюстендил"
                        },
                        new
                        {
                            Id = new Guid("77c85120-5951-47e4-b743-3173d4093560"),
                            Name = "Свети влас",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = new Guid("de1738c1-2539-4ce7-b0a3-9ac124577fbc"),
                            Name = "Созопол",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = new Guid("a0bf7221-b30e-4236-b287-de4e94f445f1"),
                            Name = "Троян",
                            Region = "Ловеч"
                        },
                        new
                        {
                            Id = new Guid("288f9b1f-bab8-4803-872c-6944e1dca17f"),
                            Name = "Трявна",
                            Region = "Габрово"
                        },
                        new
                        {
                            Id = new Guid("b11073b7-cd1c-4b2b-b186-bc906f9b3ff5"),
                            Name = "Хисаря",
                            Region = "Пловдив"
                        },
                        new
                        {
                            Id = new Guid("7bf3a252-0562-4d55-a310-bd9ab4bca530"),
                            Name = "Боровец",
                            Region = "София"
                        },
                        new
                        {
                            Id = new Guid("96b45633-c16d-43d1-b81b-d5d449ba7d7c"),
                            Name = "Пампорово",
                            Region = "Смолян"
                        },
                        new
                        {
                            Id = new Guid("b3b57d4e-ac90-46e5-875e-46bb01a9f7a0"),
                            Name = "Овощник",
                            Region = "Стара Загора"
                        });
                });

            modelBuilder.Entity("Резервирай_Преживяване.Data.Entities.Facility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Gym")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<bool?>("Parking")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<bool?>("Pool")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<Guid>("ResortId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Restaurant")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<bool?>("RoomService")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<bool?>("SpaCenter")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<bool?>("Wifi")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ResortId")
                        .IsUnique();

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("Резервирай_Преживяване.Data.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("Резервирай_Преживяване.Data.Entities.Landmark", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Landmarks");
                });

            modelBuilder.Entity("Резервирай_Преживяване.Data.Entities.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Guests")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Резервирай_Преживяване.Data.Entities.ReservationUser", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("ReservationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "ReservationId");

                    b.HasIndex("ReservationId");

                    b.ToTable("ReservationUser");
                });

            modelBuilder.Entity("Резервирай_Преживяване.Data.Entities.Resort", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stars")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Resorts");
                });

            modelBuilder.Entity("Резервирай_Преживяване.Data.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Bathrooms")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Bedrooms")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Capacity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PricePerNight")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ResortId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ResortId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Резервирай_Преживяване.Data.Entities.RoomReservation", b =>
                {
                    b.Property<Guid>("ReservationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ReservationId", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomReservation");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Резервирай_Преживяване.Data.Entities.Facility", b =>
                {
                    b.HasOne("Резервирай_Преживяване.Data.Entities.Resort", "Resort")
                        .WithOne("Facility")
                        .HasForeignKey("Резервирай_Преживяване.Data.Entities.Facility", "ResortId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resort");
                });

            modelBuilder.Entity("Резервирай_Преживяване.Data.Entities.Image", b =>
                {
                    b.HasOne("Резервирай_Преживяване.Data.Entities.Room", "Room")
                        .WithMany("Images")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Резервирай_Преживяване.Data.Entities.Landmark", b =>
                {
                    b.HasOne("Резервирай_Преживяване.Data.Entities.City", "City")
                        .WithMany("Landmarks")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Резервирай_Преживяване.Data.Entities.ReservationUser", b =>
                {
                    b.HasOne("Резервирай_Преживяване.Data.Entities.Reservation", "Reservation")
                        .WithMany("ReservationUsers")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Резервирай_Преживяване.Data.Account.User", "User")
                        .WithMany("ReservationUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Резервирай_Преживяване.Data.Entities.Resort", b =>
                {
                    b.HasOne("Резервирай_Преживяване.Data.Entities.City", "City")
                        .WithMany("Resorts")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Резервирай_Преживяване.Data.Entities.Room", b =>
                {
                    b.HasOne("Резервирай_Преживяване.Data.Entities.Resort", "Resort")
                        .WithMany("Rooms")
                        .HasForeignKey("ResortId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resort");
                });

            modelBuilder.Entity("Резервирай_Преживяване.Data.Entities.RoomReservation", b =>
                {
                    b.HasOne("Резервирай_Преживяване.Data.Entities.Reservation", "Reservation")
                        .WithMany("RoomReservations")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Резервирай_Преживяване.Data.Entities.Room", "Room")
                        .WithMany("RoomReservations")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Резервирай_Преживяване.Data.Account.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Резервирай_Преживяване.Data.Account.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Резервирай_Преживяване.Data.Account.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Резервирай_Преживяване.Data.Account.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Резервирай_Преживяване.Data.Account.User", b =>
                {
                    b.Navigation("ReservationUsers");
                });

            modelBuilder.Entity("Резервирай_Преживяване.Data.Entities.City", b =>
                {
                    b.Navigation("Landmarks");

                    b.Navigation("Resorts");
                });

            modelBuilder.Entity("Резервирай_Преживяване.Data.Entities.Reservation", b =>
                {
                    b.Navigation("ReservationUsers");

                    b.Navigation("RoomReservations");
                });

            modelBuilder.Entity("Резервирай_Преживяване.Data.Entities.Resort", b =>
                {
                    b.Navigation("Facility");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Резервирай_Преживяване.Data.Entities.Room", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("RoomReservations");
                });
#pragma warning restore 612, 618
        }
    }
}
